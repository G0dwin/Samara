	<xsl:template match="view">
		<xsl:text disable-output-escaping="yes">&lt;!doctype html>&#10;</xsl:text>
		
		<html lang="en">
			<head>
				<meta charset="utf-8" />
				<title><xsl:value-of select="//page/@title" /></title>
				<meta name="description"><xsl:attribute name="content"><xsl:value-of select="page/@title" /></xsl:attribute></meta>
				<meta name="author" content="Godwin!" />

				<xsl:for-each select="css-file">
					<link rel="stylesheet" type="text/css"><xsl:attribute name="href"><xsl:apply-templates /></xsl:attribute></link>
				</xsl:for-each>
				
				<xsl:text disable-output-escaping="yes">
					&lt;!--[if lt IE 9]&gt;
						&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
					&lt;![endif]--&gt;
				</xsl:text>
			</head>
			<body>
				<xsl:apply-templates select="view-header" />
				<xsl:apply-templates select="view-body" />
				<xsl:apply-templates select="view-footer" />
			</body>
		</html>
	</xsl:template>
	
	<xsl:template match="page">
		<div id="content">
			<h2><xsl:value-of select="@title" /></h2>
			<xsl:apply-templates />
			<footer></footer>
		</div>
	</xsl:template>

	<xsl:template match="text[@type='paragraph']">
		<p class="paragraph first-paragraph">
		<xsl:processing-instruction name="php">
			echo preg_replace('/^(\s*)(\w+)/', '&lt;span class="first-word"&gt;$2&lt;/span&gt;', preg_replace('/(\n\s*\n\s*)(\w+)/', '&lt;/p&gt;&lt;p class="paragraph"&gt;&lt;span class="first-word"&gt;$2&lt;/span&gt;', '<xsl:value-of select="." />'));
		?</xsl:processing-instruction>
		</p>
	</xsl:template>

	<xsl:template match="paragraph">
		<p>
			<xsl:apply-templates />
		</p>
	</xsl:template>
	
	<xsl:template match="paragraph/paragraph">
		<p style="border: 1px solid #CCC;">
			<xsl:apply-templates />
		</p>
	</xsl:template>
	
	<xsl:template match="component">
		<div class="component">
			<xsl:attribute name="id">
    			<xsl:value-of select="@id"/>
  			</xsl:attribute>
  			<h2><xsl:value-of select="title" /></h2>
  			<div class="component-inner">
				<xsl:apply-templates />
			</div>
		</div>
	</xsl:template>
	
	<xsl:template match="param">
		<xsl:processing-instruction name="php">
			echo $<xsl:value-of select="@name" />;
		?</xsl:processing-instruction>
	</xsl:template>

	<xsl:template match="view-header">
		<header>
			<div class="header-content">
				<xsl:apply-templates />
			</div>
		</header>
	</xsl:template>

	<xsl:template match="view-footer">
		<footer>
			<xsl:apply-templates />
		</footer>
	</xsl:template>
	
	<xsl:template match="title">
		<h1><xsl:apply-templates /></h1>
	</xsl:template>
	
	<xsl:template match="component/title">
		<h2><xsl:apply-templates /></h2>
	</xsl:template>
	
	<xsl:template match="menu">
		<nav>
			<xsl:attribute name="class">
    			<xsl:value-of select="@name"/>
  			</xsl:attribute>
			<xsl:apply-templates />
		</nav>
	</xsl:template>

	<xsl:template match="view-body">
		<div id="body-wrapper">
			<div id="body">
				<xsl:apply-templates select="sidebar" />
				<xsl:apply-templates select="page" />
			</div>
		</div>
	</xsl:template>

	<xsl:template match="sidebar">
		<div class="sidebar">
			<xsl:attribute name="id">sidebar-<xsl:value-of select="@position"/></xsl:attribute>
			<xsl:variable name="position" select="concat(@position, '-sidebar')" />
			<xsl:apply-templates />
			<xsl:apply-templates select="//component[@position=$position]" />
		</div>
	</xsl:template>
	
	<xsl:template match="logo">
		<div class="logo">
			<img src="<?php echo Theme::GetLogo(); ?>" />
  		</div>
	</xsl:template>

	<xsl:template match="form">
		<form method="post">
			<xsl:attribute name="action">/<xsl:value-of select="@controller" />/<xsl:value-of select="@action" /></xsl:attribute>
			<xsl:attribute name="id"><xsl:value-of select="@id" />-form</xsl:attribute>
			<xsl:apply-templates />
			<input type="submit"><xsl:attribute name="value"><xsl:value-of select="@title" /></xsl:attribute></input>
		</form>
	</xsl:template>
	
	<xsl:template match="form//control">
		<xsl:choose>
			<xsl:when test="@type='text'">
				<label>
					<xsl:attribute name="for"><xsl:value-of select="concat(ancestor::form/@id, '-')" /><xsl:value-of select="@param" /></xsl:attribute>
					<xsl:value-of select="@label" />:
				</label>
				<input type="text">
					<xsl:attribute name="id"><xsl:value-of select="concat(ancestor::form/@id, '-')" /><xsl:value-of select="@param" /></xsl:attribute>
					<xsl:attribute name="name"><xsl:value-of select="@param" /></xsl:attribute>
					<xsl:attribute name="value"><xsl:value-of select="@value" /></xsl:attribute>
					<xsl:attribute name="class"><xsl:value-of select="@class" /></xsl:attribute>
				</input>
			</xsl:when>
			<xsl:when test="@type='password'">
				<label>
					<xsl:attribute name="for"><xsl:value-of select="concat(ancestor::form/@id, '-')" /><xsl:value-of select="@param" /></xsl:attribute>
					<xsl:value-of select="@label" />:
				</label>
				<input type="password">
					<xsl:attribute name="id"><xsl:value-of select="concat(ancestor::form/@id, '-')" /><xsl:value-of select="@param" /></xsl:attribute>
					<xsl:attribute name="name"><xsl:value-of select="@param" /></xsl:attribute>
					<xsl:attribute name="value"><xsl:value-of select="@value" /></xsl:attribute>
					<xsl:attribute name="class"><xsl:value-of select="@class" /></xsl:attribute>
				</input>
			</xsl:when>
			<xsl:otherwise>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	
	<xsl:template match="component/title"></xsl:template>
	